version: '3.8'

services:
  redis:
    image: "redis:7-alpine"
    volumes:
      - ./tmp/redis_data:/var/lib/redis/data
    networks:
      - twilightnet

  twilight_db:
    image: postgres
    container_name: twilight_db
    env_file: 
      - .env
    volumes:
      - .db-data:/var/lib/postgresql/pgdata
    networks:
      - twilightnet

  twilight:
    #build: .
    image: twilight:latest
    container_name: twilight
    restart: on-failure
    ports:
      - "${PORT}:${PORT}"
    env_file: .env
    environment:
      - RAILS_ENV=${RAILS_ENV}
      - PORT=${PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    # Traefik example
#    labels:
#      - "traefik.enable=true"
#      - "traefik.port=${PORT}"

#      - "traefik.http.services.twilight.loadbalancer.server.port=${PORT}"
#      - "traefik.http.routers.twilight.rule=Host(`twilight.example.com`)" # change this
#      - "traefik.http.routers.twilight.entrypoints=http"
#      - "traefik.http.routers.twilight.middlewares=twilight-secure-redirect"

#      - "traefik.http.middlewares.twilight-secure-redirect.redirectscheme.scheme=https"

#      - "traefik.http.routers.twilight-secure.rule=Host(`twilight.example.com`)" # change this
#      - "traefik.http.routers.twilight-secure.entrypoints=https"
#      - "traefik.http.routers.twilight-secure.tls=true"
    depends_on:
      - twilight_db
      - redis
    links:
      - twilight_db:twilight_db
    volumes:
      - ./config:/root/app/config
      - .env:/root/app/.env
    tty: true
    stdin_open: true
    networks:
      - twilightnet

networks:
  twilightnet:
    external: false
volumes:
  db-data:
    external: false