<div id="accordion" role="tablist" aria-multiselectable="true">
  <div class="card">
    <div class="card-header" role="tab" id="headingTwo">
      <a class="collapsed" data-toggle="collapse" data-parent="#accordion" href="#add" aria-expanded="false" aria-controls="add">
        <%=I18n.t("comments.add")%>
      </a>
    </div>
    <div id="add" class="collapse" role="tabpanel" aria-labelledby="headingTwo">
      <div class="card-block">
        <%= form_with(model: Comment, :method => 'put', :remote => true) do  |f| %>
          <%= hidden_field(:comment, :post, { value: @current_post.uuid }) %>
          <div id="markdown" class="tab-pane in active title">
            <div class="comment-editor">
              <%= f.text_area :content, { id: "comments_content", placeholder: "#{I18n.t("posts.text_placeholder")}" } %>
            </div>
            <%if allowed_to?(:create_platform_comments?, @current_post)%>
              <%telegram_channels = @current_post.published_channels.where(platform: Platform.find_by(title: "telegram"))%>
              <%if telegram_channels.any?%>
                <div class="colorful-checkboxes">
                  <%telegram_channels.each do |channel|%>
                    <%title = channel.options&.dig("title")%>
                    <%=check_box("channels", channel.id, { :class=>"colorful-checkbox", :checked => false })%>
                    <%= label_tag "channels_#{channel.id}", title&.capitalize %>
                  <%end%>
                </div>
              <%end%>
            <%else%>
              <br>
            <%end%>
            <p><%= f.submit I18n.t("channels.add")%><br></p>
          </div>
        <%end%>
      </div>
    </div>
  </div>
</div>

<%= javascript_include_tag 'application.js', "data-turbo-track": "reload" %>
<%= javascript_include_tag 'showdown.min.js' %>
<%= javascript_include_tag 'run_showdown.js' %>