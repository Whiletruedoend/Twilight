<body id="bg">
  <div class="container">
    <h2><%= I18n.t("posts.edit_header") %></h2>

    <ul class="nav nav-tabs">
      <li class="active"><a data-toggle="tab" href="#markdown"><%= I18n.t("posts.markdown") %></a></li>
      <li><a data-toggle="tab" href="#attachments"><%= I18n.t("posts.attachments") %></a></li>
      <li><a data-toggle="tab" href="#other"><%= I18n.t("posts.other") %></a></li>
    </ul>

    <%= form_with(model: @current_post, local: true) do |f| %>
      <%= render 'shared/errors', object: @current_post %>
      <% platforms = @current_post.platforms %>
      <% channels = Channel.joins(:platform_posts).where(platform_posts: { post: @current_post }) %>
      <div class="tab-content">
        <div id="markdown" class="tab-pane in active title">
          <%= f.text_field(:title, { class: 'form-control', placeholder: "#{I18n.t("posts.title_placeholder")}", value: @current_post.title }) %>
          <div class="markdown-editor">
            <%= f.text_area :content, placeholder: "#{I18n.t("posts.text_placeholder")}", value: @current_post.text %>
            <div id="preview" class="preview"></div>
          </div>
          <p id="chars" class="chars"><%=@current_post.text.length%> chars</p>
        </div>
        <div id="attachments" class="tab-pane">
          <h3><%= I18n.t("posts.current_attachments") %>:</h3>
          <% if platforms.empty? || platforms.values.exclude?(true)%>
            <div class="dropzone dropzone-default dz-clickable" data-controller="dropzone" data-dropzone-max-file-size="<%=Rails.configuration.credentials[:max_file_size]%>" data-dropzone-max-files="<%=Rails.configuration.credentials[:max_upload_files]%>">
              <%= f.file_field :attachments, multiple: true, direct_upload: true, data: { target: 'dropzone.input' } %>
              <div class="dropzone-msg dz-message needsclick">
                <h3 class="dropzone-msg-title"><%= I18n.t("posts.attachments_msg_title") %></h3>
                <span class="dropzone-msg-desc text-sm"><%= "#{I18n.t("posts.attachments_msg_max_size")}: #{Rails.configuration.credentials[:max_file_size]} MB; #{I18n.t("posts.attachments_msg_max_count")}: #{Rails.configuration.credentials[:max_upload_files]}" %></span>
              </div>
            </div>
          <% end %>
          <% attachments = @current_post.content_attachments %>
          <% if attachments.present? %>
            <div class="content-attachments">
            <% attachments.each do |att| %>
                <div class="attachment"> <!-- TODO? -->
                <%  case %>
                <%  when att.image? %>
                    <a target="_blank" href="<%=url_for(att)%>"><%= image_tag url_for(att.variant(:thumb150)) %></a>
                <%  when att.video? %>
                    <a target="_blank" href="<%=url_for(att)%>"><%= image_tag url_for(att.preview(resize_to_limit: [150, 150]).processed) %></a>
                <%  when att.audio? %>
                    <a target="_blank" href="<%=url_for(att)%>"><%= audio_tag(url_for(att), autoplay: false, controls: true) %></a>
                <%  else %>
                    <a target="_blank" href="<%=url_for(att)%>"><%= image_tag url_for("/assets/file.png") %></a>
                <% end %>

                <%=check_box("deleted_attachments", att.blob.signed_id, {:checked => true})%> <%=att.filename%><br>
                </div>
            <% end %>
            </div>
          <% else %>
            <p><%= I18n.t("posts.no_attachments") %></p>
          <% end %>
        </div>
        <div id="other" class="tab-pane">
          <h3><%= I18n.t("posts.channels") %></h3>
          <% if channels.any? %>
            <div class="colorful-checkboxes">
              <% channels.each_with_index do |channel, index| %>
                <% next if channels[index+1].present? && (channels[index+1].id == channel.id) # avoid matrix duplicates %>
                <% title = channel.options&.dig("title") %>
                <%=check_box("channels", channel.id, { :class=>"colorful-checkbox", :checked => true })%>
                <%= label_tag "channels_#{channel.id}", title&.capitalize %>
              <% end %>
            </div>
          <% else %>
            <p><%= I18n.t("posts.channels_not_found") %></p>
          <% end %>

          <% if Rails.configuration.credentials[:enable_categories] %>
            <div class="form-group">
              <h3><%= I18n.t("posts.category") %></h3>
              <% if @current_user.categories.any? %>
                  <% categories = Category.order(:sort).all.collect{ |cat| [cat.name, cat.id] } %>
                  <% categories.unshift(["-- #{I18n.t("posts.no_category")} --", nil])%>
                <% if @current_post.category.present? %>
                  <%= f.select(:category, categories, :selected=>[@current_post.category.name, @current_post.category.id]) %>
                <% else %>
                  <%= f.select(:category, categories) %>
                <% end %>
              <% end %><br><br>
              <div class="form-inline">
                <div class="form-group">
                  <%= f.text_field :category_name, size: 20, class: "form-control", autofocus: true, placeholder: I18n.t("posts.new_category") %>
                  <%= f.color_field :category_color, class: "color-picker" %>
                </div>
              </div>
            </div>
          <% end %>

          <div class="form-group">
            <h3><%= I18n.t("posts.privacy") %></h3>
            <%= f.select(:privacy, [[I18n.t("posts.privacy_public"), 0], [I18n.t("posts.privacy_registered"), 1], [I18n.t("posts.privacy_onlyme"), 2]], required: true) %>
          </div>
          <div class="tags">
            <h3><%= I18n.t("posts.tags") %></h3>
            <% tags = ItemTag.where(item: @current_post) %>
            <% if tags.present? %>
              <div class="colorful-tags">
                <% ItemTag.where(item: @current_post).each do |item_tag| %>
                  <%=check_box("tags", item_tag.tag.id, { :class=>"form-check-input colorful-checkbox", :checked => item_tag.enabled, :style => "margin: auto 2px auto 2px;" })%>
                  <%=label_tag "tags_#{item_tag.tag.id}", "##{item_tag.tag.name}"%>
                <% end %>
              </div>
            <% else %>
              <p><%= I18n.t("posts.tags_not_found") %></p>
            <% end %><br><br>
            <div class="form-inline">
              <div class="form-group">
                <%= f.text_field :new_tags_name, size: 20, class: "form-control", autofocus: true, placeholder: I18n.t("posts.new_tags") %>
                <div class="colorful-checkboxes" style="display: inherit">
                  <%= f.check_box(:new_tags_enabled_by_default, { :class=>"colorful-checkbox", :checked => true }) %>
                  <%= f.label :new_tags_enabled_by_default, I18n.t("tags.by_default") %>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <%= link_to "<--- #{I18n.t("posts.back")}", post_path, data: { confirm: "#{I18n.t("posts.back_confirm")}" }%>
      <center><%= f.submit %> </center><% end %>
  </div>
</body>

<%= javascript_include_tag 'application.js', "data-turbo-track": "reload" %>
<%= javascript_include_tag 'showdown.min.js' %>
<%= javascript_include_tag 'run_showdown.js' %>